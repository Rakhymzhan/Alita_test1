const TelegramBot = require('node-telegram-bot-api');
const token = '1202033897:AAHglJA6iLKaP6EA4j47tdw_XwQUtF7sqGA';
// –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ä–æ—Å —Å–µ—Ä–≤–µ—Ä–∞. –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É Telegram, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
// –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://core.telegram.org/bots/api#getupdates
const bot = new TelegramBot(token, { polling: true });



bot.onText(/^\/start/, async function (msg, match) {
    console.log(match);
    try{
        const userId = msg.chat.id;
        let text = "–ü—Ä–∏–≤–µ—Ç, "+ msg.from.first_name +" –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–∏—Ç–∞. –° —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è —è –±—É–¥—É —Ç–≤–æ–∏–º –¥—Ä—É–≥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –¥–∞—Å—Ç —Ç–µ–±–µ —É—á–∏—Ç—å—Å—è –ø–ª–æ—Ö–æ) –Ø –±—É–¥—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –≤ —Å–∞–º–æ–º —Ç—Ä—É–¥–Ω–æ–º ‚Äú–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å‚Äù. –ë—É–¥—É —Å—Ç–∞—Ä–∞—Ç—å—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞—Ç—å —Ç–µ–±—è, —á—Ç–æ–±—ã —Ç—ã –±—ã–ª –≤ —Ç–æ–Ω—É—Å–µ –∏ —Ç–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è –Ω–µ —É–≥–∞—Å–∞–ª–æ. –ñ–¥–∏ –æ—Ç –º–µ–Ω—è –º–Ω–æ–≥–æ –∑–∞–¥–∞—á. –Ø –±—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±–µ —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.";
        await bot.sendMessage(userId, text).then(async () => {
            bot.sendMessage(userId, '–≠—Ç–æ –Ω–∞—á–∞–ª–æ —Ç–≤–æ–µ–≥–æ –ø—É—Ç–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–º–µ—Å—Ç–µ —Å–æ —à–∫–æ–ª–æ–π Decode, —è –≤–µ—Ä—é –≤ —Ç–µ–±—è :)')
        });
        remindingUsers(userId, msg.from.first_name);
    }
    catch (e) {
        console.log(e);
    }

});




// bot.onText(/–Ω–∞–ø–æ–º–Ω–∏ (.+) –≤ (.+)/, function (msg, match) {
//     var userId = msg.from.id;
//     var text = match[1];
//     var time = match[2];
//
//     notes.push({ 'uid': userId, 'time': time, 'text': text });
//
//     bot.sendMessage(userId, '–¥—É –¥—É');
// });
//


function remindingUsers(userId, userName) {
    let notes = [
        {
            text:'–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, ' + userName+ ', —Å–∞–º–æ–µ –≤—Ä–µ–º—è —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –¥–µ–Ω—å —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –Ω–µ–º –±—ã–ª–æ –≤—Ä–µ–º—è –¥–ª—è –∫–æ–¥–∏–Ω–≥–∞. –ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω–∏ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ :)',
            time: '9:0:0'
        },
        {
            text:'–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–≤–æ–π –¥–µ–Ω—å, ' + userName +'? –¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç—ã? –ù–∞—á–Ω–∏ –µ–≥–æ –¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —è –¥–∞—é —Ç–µ–±–µ –Ω–∞ —ç—Ç–æ 40 –º–∏–Ω—É—Ç)',
            time: '15:0:0'
        },
        {
            text:'–ù—É –∫–∞–∫, —É —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—å?',
            answer: [
                [{ text: '–î–∞', callback_data: '2_yes_'+ userId }],
                [{ text: '–ù–µ—Ç', callback_data: '2_no_'+ userId+'' }]
            ],
            yes: '–Ø –≤ —ç—Ç–æ–º –∏ –Ω–µ —Å–æ–º–Ω–µ–≤–∞–ª–∞—Å—å, —Ç—ã –æ—á–µ–Ω—å —Å–º—ã—à–ª–µ–Ω—ã–π(–∞—è). –¢–µ–ø–µ—Ä—å –ø–æ —Ä–µ—à–∞–π –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Ä–µ—à–∏—Ç—å –æ–¥–Ω—É –∑–∞–¥–∞—á—É –±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤, —Ç–æ —ç—Ç–æ —Å–∏–≥–Ω–∞–ª –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é. –ò –Ω–µ –±–æ–π—Å—è –∏—Å–∫–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –•–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞—É—á–∏—Ç—å—Å—è —Ö–æ—Ä–æ—à–æ –≥—É–≥–ª–∏—Ç—å ;)',
            no: '–Ø —É–≤–µ—Ä–µ–Ω–∞ —á—Ç–æ —Ç—ã —Å—Ç–∞—Ä–∞–ª—Å—è —Ä–µ—à–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É) –Ω–æ —É—á–∏—Ç—å—Å—è - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —É–º–µ—Ç—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –∏ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –ù–∞–ø–∏—à–∏ –≤ –≤–∞—à—É –æ–±—â—É—é –≥—Ä—É–ø–ø—É —á—Ç–æ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É, –æ—Ç–ø—Ä–∞–≤—å —Ç—É–¥–∞ —Å–∫—Ä–∏–Ω—ã —Å–≤–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫. –¢–∞–∫ —Ç—ã –Ω–∞–ª–∞–¥–∏—à—å –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ —Å–≤–æ–∏–º–∏ –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∞–º–∏) –¥–∞ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, —è —É–≤–µ—Ä–µ–Ω–∞ –±—É–¥–µ—Ç —Ä–∞–¥ —Ç–æ–º—É, —á—Ç–æ —Ç—ã —Å—Ç–∞—Ä–∞–µ—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç. –ì–ª–∞–≤–Ω–æ–µ, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è)',
            time: '14:48:30'
        },
        {
            text:'–ù—É, –∫–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? –ü–æ–∑–Ω–∞–µ—à—å —Å—É—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è) –≠—Ö –∏ –º–Ω–µ –±—ã –ø—Ä–æ–π—Ç–∏ –≤–µ—Å—å —ç—Ç–æ—Ç –ø—É—Ç—å –∑–∞–Ω–æ–≤–æ ;) –£ —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è?',
            answer: [
                [{ text: '–î–∞', callback_data: '3_yes_'+userId+'' }],
                [{ text: '–ù–µ—Ç', callback_data: '3_no_'+userId+'' }],
                [{ text: '–£–∂–µ —Å–¥–µ–ª–∞–ª(–∞) –≤—Å–µ', callback_data: '3_allCompleted_'+userId+'' }]
            ],
            allCompleted: '–¢—ã –ø—Ä–æ—Å—Ç–æ —É–º–Ω–∏—á–∫–∞ üòò –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ, –∞ —è –∑–∞–ø–∏—à—É —ç—Ç–æ —É —Å–µ–±—è, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—Å—Ç –º–Ω–µ ;)',
            yes: '–ú–æ–ª–æ–¥–µ–µ–µ—Ü, –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è —Ä–µ—à–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω—É —Å–ª–∏—à–∫–æ–º –ø—Ä—è–º —Ç—Ä—É–¥–Ω–æ, –Ω–∞–ø–∏—à–∏ –≤ –≤–∞—à—É –æ–±—â—É—é –≥—Ä—É–ø–ø—É, —É–≤–µ—Ä–µ–Ω–∞ —á—Ç–æ —ç—Ç–∏ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ —Å–ª–æ–∂–Ω—ã–º–∏, –Ω–æ –≤–º–µ—Å—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Ö —Ä–µ—à–∏—Ç—å)',
            no: '–Ø —É–≤–µ—Ä–µ–Ω–∞ —á—Ç–æ —Ç—ã —Å—Ç–∞—Ä–∞–ª—Å—è —Ä–µ—à–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É) –Ω–æ —É—á–∏—Ç—å—Å—è - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —É–º–µ—Ç—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –∏ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –ù–∞–ø–∏—à–∏ –≤ –≤–∞—à—É –æ–±—â—É—é –≥—Ä—É–ø–ø—É —á—Ç–æ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É, –æ—Ç–ø—Ä–∞–≤—å —Ç—É–¥–∞ —Å–∫—Ä–∏–Ω—ã —Å–≤–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫. –¢–∞–∫ —Ç—ã –Ω–∞–ª–∞–¥–∏—à—å –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ —Å–≤–æ–∏–º–∏ –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∞–º–∏) –¥–∞ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, —è —É–≤–µ—Ä–µ–Ω–∞ –±—É–¥–µ—Ç —Ä–∞–¥ —Ç–æ–º—É, —á—Ç–æ —Ç—ã —Å—Ç–∞—Ä–∞–µ—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç. –ì–ª–∞–≤–Ω–æ–µ, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è)',
            extraNoAnswer: [
                [{ text: '–ù–∞—á–Ω—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∫–æ—Ä–æ', callback_data: '3_extraYes_'+userId+'' }],
                [{ text: '–Ø —É–¥–µ–ª–∏–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –º–Ω–µ –±—ã–ª–æ —Å–ª–æ–∂–Ω–æ–≤–∞—Ç–æ —Ä–µ—à–∏—Ç—å –∏—Ö', callback_data: '3_extraNo_'+userId+'' }]
            ],
            extraYes: '–•–æ—Ä–æ—à–æ, —è –¥—É–º–∞—é —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è –∏ —Ç—ã –≤—Å–µ —É—Å–ø–µ–µ—à—å, —Å–∂–∞–ª–∞ —Å–≤–æ–∏ —Ä—É—á–∫–∏ –≤ –∫—É–ª–∞–∫ –∏ –±–æ–ª–µ—é –∑–∞ —Ç–µ–±—è üòç',
            extraNo: '–î–∞, –±—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ–≤–∞—Ç–æ —Å —ç—Ç–∏–º–∏ –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏, –∞–∂ –≥–æ–ª–æ–≤—É —Å–≤–æ–¥–∏—Ç. –ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—â—É—é –≥—Ä—É–ø–ø—É —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–µ—à–∏—Ç—å, –∏ —Å–∫–∏–Ω—É—Ç—å —Å–∫—Ä–∏–Ω—ã —Ç–≤–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.',
            time: '14:53:30'
        },
        {
            text:'–¢—ã —Å—á–∏—Ç–∞–µ—à—å —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å –≤ —Ç–≤–æ–µ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?',
            answer: [
                [{ text: '–î–∞', callback_data: '4_yes_'+userId+'' }],
                [{ text: '–ù–µ—Ç, —è —Å–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª', callback_data: '4_no_'+userId+'' }],
                [{ text: '–ù–µ—Ç, —è –¥—É–º–∞–ª —á—Ç–æ —Å–º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ', callback_data: '4_extraNo_'+userId+'' }]

            ],
            yes: '–ò —è —Ç–∞–∫ —Å—á–∏—Ç–∞—é, —Ç—ã —Å–ª–∞–≤–Ω–æ –ø–æ—Ç—Ä—É–¥–∏–ª—Å—è(–∞—Å—å). –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ—Ç–¥–æ—Ö–Ω—É—Ç—å ;) –∑–∞—Ä–∞–Ω–µ–µ —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏!',
            no: '–ù–µ—Ç —è —Å–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª - –ù–∞–≤–µ—Ä–Ω–æ –≤ —ç—Ç–æ–º –µ—Å—Ç—å –∏ –º–æ—è –≤–∏–Ω–∞ üò¢–±—É–¥—É —Å—Ç–∞—Ä–∞—Ç—å—Å—è –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞—Ç—å —Ç–µ–±—è, –Ω–∞ –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è! –ó–∞–≤—Ç—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Ä–µ—à–∞–π –∑–∞–¥–∞—á–∏ üôè –ê —Å–µ–π—á–∞—Å –ª—É—á—à–µ –æ—Ç–¥–æ—Ö–Ω–∏, —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üí§',
            extraNo: ' –ú–Ω–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–≤–æ–µ —É—Å–µ—Ä–¥—Å—Ç–≤–æ üòä–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –∑–∞–≤—Ç—Ä–∞. –ü–æ–∂–µ–ª–∞—é —Ç–µ–±–µ —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ –≤ –∑–∞—Ä–∞–Ω–µ–µ üòä',
            goodNightAnswer: [
                [{text: '–∏ —Ç–µ–±–µ —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏!', callback_data: '4_thanks_'+userId+''}]
            ],
            thanks: ' –°–ø–∞—Å–∏–±–æ ü•∞',
            time: '13:58:0'
        }

    ];
        // sending notifications to user according to corresponding time

    setInterval(async function(){
        for (var i = 0; i < notes.length; i++) {
            var curDate = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();
            if (notes[i]['time'] === curDate) {
                const text = notes[i].text;
                if(notes[i].answer !=null){
                  var options = {
                      reply_markup: JSON.stringify({
                          inline_keyboard: notes[i].answer,
                          parse_mode: 'Markdown'
                      })
                  };
                  await bot.sendMessage(userId, text, options).then(async () => {

                  });
              }else {
                  await bot.sendMessage(userId, text).then(async () => {

                  });
              }
            }
        }
    }, 1000);

    bot.on('callback_query', async (msg) => {
            try {
                let answer = msg.data.split('_');
                let index = answer[0];
                let button = answer[1];
                const user_Id= answer[2];

                let data = button + "_"+ user_Id;
                console.log(msg.data);
                switch (data) {
                    case 'yes_'+user_Id:
                        if (notes[index].goodNightAnswer != null) {
                            var options = {
                                reply_markup: JSON.stringify({
                                    inline_keyboard: notes[index].goodNightAnswer,
                                    parse_mode: 'Markdown',
                                    hide_keyboard: true
                                })
                            };
                            await bot.sendMessage(user_Id, notes[index].yes, options).then(async () => {

                            });
                        } else {
                            await bot.sendMessage(user_Id, notes[index].yes).then(async () => {

                            });
                        }
                        break;
                    case 'no_'+user_Id:
                        if (notes[index].extraNoAnswer != null) {
                            options = {
                                reply_markup: JSON.stringify({
                                    inline_keyboard: notes[index].extraNoAnswer,
                                    parse_mode: 'Markdown'
                                })
                            };
                            await bot.sendMessage(user_Id, notes[index].no, options).then(async () => {

                            });

                        } else if (notes[index].goodNightAnswer != null) {
                            options = {
                                reply_markup: JSON.stringify({
                                    inline_keyboard: notes[index].goodNightAnswer,
                                    parse_mode: 'Markdown'
                                })
                            };
                            await bot.sendMessage(user_Id, notes[index].no, options).then(async () => {

                            });
                        } else {
                            await bot.sendMessage(user_Id, notes[index].no).then(async () => {

                            });
                        }
                        break;
                    case 'extraYes_'+user_Id:
                        await bot.sendMessage(user_Id, notes[index].extraYes).then(async () => {

                        });
                        break;
                    case 'extraNo_'+user_Id:
                        if (notes[index].goodNightAnswer != null) {
                            options = {
                                reply_markup: JSON.stringify({
                                    inline_keyboard: notes[index].goodNightAnswer,
                                    parse_mode: 'Markdown'
                                })
                            };
                            await bot.sendMessage(user_Id, notes[index].extraNo, options).then(async () => {

                            });
                        } else {
                            await bot.sendMessage(user_Id, notes[index].extraNo).then(async () => {

                            });
                        }
                        break;
                    case 'thanks_'+user_Id:
                        await bot.sendMessage(user_Id, notes[index].thanks).then(async () => {

                        });
                        break;
                    case 'allCompleted_'+user_Id:
                        await bot.sendMessage(user_Id, notes[index].allCompleted).then(async () => {

                        });
                        break;
                }
            }catch (e) {
                console.log(e.message);
            }
    });

}